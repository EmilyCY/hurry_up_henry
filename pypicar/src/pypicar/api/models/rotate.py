# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from pypicar.api.models.base_model_ import Model
from pypicar.api import util


class Rotate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, angle: int=None):
        """Rotate - a model defined in OpenAPI

        :param angle: The angle of this Rotate.
        """
        self.openapi_types = {
            'angle': int
        }

        self.attribute_map = {
            'angle': 'angle'
        }

        self._angle = angle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rotate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rotate of this Rotate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def angle(self):
        """Gets the angle of this Rotate.

        The rotation angle, must be multiple of 10 (10, 360 range)

        :return: The angle of this Rotate.
        :rtype: int
        """
        return self._angle

    @angle.setter
    def angle(self, angle):
        """Sets the angle of this Rotate.

        The rotation angle, must be multiple of 10 (10, 360 range)

        :param angle: The angle of this Rotate.
        :type angle: int
        """
        if angle is None:
            raise ValueError("Invalid value for `angle`, must not be `None`")
        if angle is not None and angle > 360:
            raise ValueError("Invalid value for `angle`, must be a value less than or equal to `360`")
        if angle is not None and angle < 10:
            raise ValueError("Invalid value for `angle`, must be a value greater than or equal to `10`")

        self._angle = angle
